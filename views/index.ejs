<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>CRUD Application</title>

    <style>
      body {
        font-family: Arial, sans-serif;
        margin: 0;
        padding: 0;
        background-color: #f4f4f4;
      }

      h1 {
        text-align: center;
        color: #333;
      }

      .container {
        width: 80%;
        margin: 0 auto;
        padding: 20px;
      }

      form {
        background-color: #fff;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
      }

      input,
      textarea {
        width: 100%;
        padding: 10px;
        margin: 10px 0;
        border: 1px solid #ccc;
        border-radius: 5px;
      }

      button {
        padding: 10px 20px;
        background-color: #4caf50;
        color: white;
        border: none;
        cursor: pointer;
        border-radius: 5px;
      }

      button:hover {
        background-color: #45a049;
      }

      .crud-table {
        width: 100%;
        margin-top: 20px;
        border-collapse: collapse;
      }

      .crud-table th,
      .crud-table td {
        padding: 10px;
        text-align: left;
        border-bottom: 1px solid #ddd;
      }

      .crud-table th {
        background-color: #f2f2f2;
      }

      .action-btn {
        background-color: #008cba;
        color: white;
        border: none;
        padding: 5px 10px;
        cursor: pointer;
        border-radius: 5px;
      }

      .action-btn:hover {
        background-color: #007bb5;
      }

      .delete-btn {
        background-color: #f44336;
      }

      .delete-btn:hover {
        background-color: #d32f2f;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h1>CRUD Application</h1>

      <form id="crudForm">
        <input type="hidden" id="crudId" name="id" />
        <input
          type="text"
          id="title"
          name="title"
          placeholder="Title"
          required
        />
        <textarea
          id="description"
          name="description"
          placeholder="Description"
          rows="4"
          required
        ></textarea>
        <textarea
          id="remark"
          name="remark"
          placeholder="Remark"
          rows="2"
          required
        ></textarea>
        <button type="submit" id="submitBtn">Create</button>
      </form>

      <table class="crud-table" id="crudTable">
        <thead>
          <tr>
            <th>Title</th>
            <th>Description</th>
            <th>Remark</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody id="tableBody"></tbody>
      </table>
    </div>

    <script>
      async function fetchData() {
        const response = await fetch("/read");
        const data = await response.json();
        const tableBody = document.getElementById("tableBody");
        tableBody.innerHTML = "";
        data.data.forEach((item) => {
          const row = document.createElement("tr");
          row.innerHTML = `
          <td>${item.title}</td>
          <td>${item.description}</td>
          <td>${item.remark}</td>
          <td>
            <button class="action-btn" onclick="editData('${item._id}')">Edit</button>
            <button class="delete-btn action-btn" onclick="deleteData('${item._id}')">Delete</button>
          </td>
        `;
          tableBody.appendChild(row);
        });
      }

      document
        .getElementById("crudForm")
        .addEventListener("submit", async function (event) {
          event.preventDefault();

          const id = document.getElementById("crudId").value;
          const title = document.getElementById("title").value;
          const description = document.getElementById("description").value;
          const remark = document.getElementById("remark").value;

          let url = "/create";
          let method = "POST";

          if (id) {
            url = `/update/${id}`;
            method = "PATCH";
          }

          const response = await fetch(url, {
            method: method,
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ title, description, remark }),
          });

          const data = await response.json();

          if (data.status === 200) {
            alert(data.message);
            fetchData();
            resetForm();
          }
        });

      function editData(id) {
        fetch(`/read/${id}`)
          .then((response) => response.json())
          .then((data) => {
            const item = data.data;
            document.getElementById("crudId").value = item._id;
            document.getElementById("title").value = item.title;
            document.getElementById("description").value = item.description;
            document.getElementById("remark").value = item.remark;
            document.getElementById("submitBtn").innerText = "Update";
          });
      }

      function deleteData(id) {
        if (confirm("Are you sure you want to delete this item?")) {
          fetch(`/delete/${id}`, { method: "DELETE" })
            .then((response) => response.json())
            .then((data) => {
              alert(data.message);
              fetchData();
            });
        }
      }

      function resetForm() {
        document.getElementById("crudId").value = "";
        document.getElementById("title").value = "";
        document.getElementById("description").value = "";
        document.getElementById("remark").value = "";
        document.getElementById("submitBtn").innerText = "Create";
      }

      fetchData();
    </script>
  </body>
</html>
